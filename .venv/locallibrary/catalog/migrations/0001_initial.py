# Generated by Django 3.2.7 on 2021-11-24 14:17

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(help_text='This is the branch number, such as 1001 for San Antonio', unique=True)),
                ('name', models.CharField(help_text='This is the branch name, such as San Antonio', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Engine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine_model', models.CharField(help_text='This is the engine model, such as ISX 15', max_length=100)),
            ],
            options={
                'ordering': ['engineMfg', 'engine_model'],
            },
        ),
        migrations.CreateModel(
            name='engineMfg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='This is the Engine Manufacturer, such as Cummins', max_length=100)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GroupIdsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField(null=True)),
                ('group_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HelperSettingsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_appt_cleanup_time', models.DateTimeField(default=datetime.datetime(2000, 1, 1, 0, 0))),
            ],
        ),
        migrations.CreateModel(
            name='ServiceLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(help_text="This is the level.  Options are 'G, 1, 2, 3, 4, 5'", max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceMenuModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('time_minutes', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(help_text="This is the service type.  Options are 'Quick Lube, A-Service, B-Service", max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='BranchSchedule',
            fields=[
                ('branch', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='catalog.branch')),
                ('holidays', models.CharField(blank=True, max_length=1000, null=True, validators=[django.core.validators.int_list_validator])),
                ('monday_first_appt', models.TimeField(null=True)),
                ('monday_last_appt', models.TimeField(null=True)),
                ('tuesday_first_appt', models.TimeField(null=True)),
                ('tuesday_last_appt', models.TimeField(null=True)),
                ('wednesday_first_appt', models.TimeField(null=True)),
                ('wednesday_last_appt', models.TimeField(null=True)),
                ('thursday_first_appt', models.TimeField(null=True)),
                ('thursday_last_appt', models.TimeField(null=True)),
                ('friday_first_appt', models.TimeField(null=True)),
                ('friday_last_appt', models.TimeField(null=True)),
                ('saturday_first_appt', models.TimeField(null=True)),
                ('saturday_last_appt', models.TimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('unit', models.CharField(help_text='Unit number for the vehicle', max_length=10)),
                ('vin', models.CharField(help_text='VIN of the vehicle', max_length=17, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.MinLengthValidator(17)])),
                ('mileage', models.IntegerField(default=0, help_text='Mileage of the vehicle')),
                ('engine', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.engine')),
                ('engineMfg', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.enginemfg')),
                ('sold_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['unit', 'vin'],
                'permissions': (('view_all_vehicles', 'View All Vehicles'),),
                'unique_together': {('sold_to', 'unit')},
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timeslot', models.IntegerField(choices=[(0, '7:00am - 09:00am'), (1, '09:00am - 11:00am'), (2, '1:00pm - 3:00pm'), (3, '3:00pm - 5:00pm'), (4, '5:00pm - 7:00pm')])),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('price', models.FloatField()),
                ('time_minutes', models.IntegerField()),
                ('service_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.servicelevel')),
                ('service_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='PastAppt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(null=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('vin', models.CharField(max_length=17)),
                ('services', models.CharField(max_length=1000, validators=[django.core.validators.int_list_validator])),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.branch')),
                ('sold_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.vehicle')),
            ],
            options={
                'ordering': ['branch', 'start_time'],
            },
        ),
        migrations.AddField(
            model_name='engine',
            name='engineMfg',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.enginemfg'),
        ),
        migrations.AddField(
            model_name='engine',
            name='servicelevel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.servicelevel'),
        ),
        migrations.CreateModel(
            name='NewAppt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.branch')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.service')),
                ('servicelevel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.servicelevel')),
                ('servicetype', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.servicetype')),
                ('sold_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.vehicle')),
                ('vin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='VIN', to='catalog.vehicle')),
            ],
            options={
                'ordering': ['branch', 'start_time'],
                'unique_together': {('branch', 'start_time')},
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('Available', 'Available'), ('Book', 'Booked'), ('Requested', 'Requested'), ('Confirmed', 'Confirmed')], default='Available', help_text='Booking Availability', max_length=10)),
                ('vin', models.CharField(max_length=17)),
                ('date', models.DateField(help_text='MM-DD-YY')),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.branch')),
                ('servicelevel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.servicelevel')),
                ('servicetype', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.servicetype')),
                ('sold_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('timeslots', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.timeslot')),
                ('unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.vehicle')),
            ],
            options={
                'unique_together': {('branch', 'date', 'timeslots')},
            },
        ),
    ]
